@model Model.IndexChartModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>
    Gráficos</h2>
<fieldset>
    <legend>Dados </legend>
    <div class="span6">
        @using (Html.BeginForm("Generate", "Chart", FormMethod.Post, new { id = "generateChartFormId" }))
        {
            @Html.Partial("CustomSummary")
            @Html.Partial("ViewBagMessage")

            <div class="row-fluid " style="margin-bottom: 20px;">
                <button class="btn  btn-success pull-left" type="submit">
                    Gerar gráfico</button>
            </div>
            <div class="row-fluid">
                <div class="control-group">
                    <label class="control-label">
                        @Html.Label("Gráfico")</label>
                    <div class="controls">
                        <div class="bfh-selectbox">
                            <a class="bfh-selectbox-toggle" role="button" data-toggle="bfh-selectbox" href="#">
                                <input type="hidden" name="TipoGrafico" id="TipoGrafico" value="@Util.Enum.TipoGrafico.PesoDuracaoTratamento">
                                <span class="bfh-selectbox-option">Peso x Duração do tratamento</span><b class="caret"></b></a>
                            <div class="bfh-selectbox-options">
                                <input type="text" class="bfh-selectbox-filter">
                                <div role="listbox">
                                    <ul role="option">
                                        <li><a tabindex="-1" href="#" data-option="@Util.Enum.TipoGrafico.PesoDuracaoTratamento">
                                            Peso x Duração do tratamento </a></li>
                                        <li><a tabindex="-1" href="#" data-option="@Util.Enum.TipoGrafico.PesoPressaoArterial">
                                            Peso x Pressão Arterial</a></li>
                                        <li><a tabindex="-1" href="#" data-option="@Util.Enum.TipoGrafico.PesoTaxaGlicemica">
                                            Peso x Taxa Glicêmica</a></li>
                                        <li><a tabindex="-1" href="#" data-option="@Util.Enum.TipoGrafico.PesoTriglicerides">
                                            Peso x Triglicérides</a></li>
                                        <li><a tabindex="-1" href="#" data-option="@Util.Enum.TipoGrafico.PesoHemoglobina">Peso
                                            x Hemoglobina</a></li>
                                        <li><a tabindex="-1" href="#" data-option="@Util.Enum.TipoGrafico.PesoColesterol">Peso
                                            x Colesterol</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">
                        @Html.Label("Nome do paciente")</label>
                    <div class="controls">
                        @Html.Partial("PacienteComboBox", WebControllers.PacienteController.GetComboBox(0))
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">
                        @Html.Label("Data início")</label>
                    <div class="controls">
                        <div class="input-append datetimepicker">
                            <input type="text" id="DataInicial" name="DataInicial" data-format="dd/MM/yyyy" class=" "
                                placeholder="Data Inicial"><span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar"
                                    class="icon-calendar"></i></span></div>
                    </div>
                </div>
                <div class="control-group">
                    <label class="control-label">
                        @Html.Label("Data fim")</label>
                    <div class="controls">
                        <div class="input-append datetimepicker">
                            <input type="text" id="DataFinal" name="DataFinal" data-format="dd/MM/yyyy" class=" "
                                placeholder="Data Final"><span class="add-on"><i data-time-icon="icon-time" data-date-icon="icon-calendar"
                                    class="icon-calendar"></i></span></div>
                    </div>
                </div>
            </div>
        
    
        }
    </div>
    <div class="span6">
        <div id="chart_div">
        </div>
        <br />
        <div id="table_data">
        </div>
    </div>
</fieldset>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">
    google.load('visualization', '1', { packages: ['corechart','table'] });
    $(document).ready(function () {
        $("#generateChartFormId").submit(function (e) {
            var queryString = $(e.target).serialize() + '&';
            $.post('/Chart/Generate', queryString, function (data) {
                google.setOnLoadCallback(OnLoad(data.Data));
            });
            return false;
        });
    });

    function OnLoad(response) {
        var data = new google.visualization.DataTable();
        for (var i = 0; i < response.Columns.length; i++) {
            data.addColumn(response.Columns[i].Type, response.Columns[i].Label);
        }
        for (var i = 0; i < response.Rows.length; i++) {
            data.addRows(1);
            debugger;
            if(response.Rows[i].Cells)
            {
                for (var j = 0; j < response.Rows[i].Cells.length; j++) {
            
                    if(response.Rows[i].Cells)
                        data.setValue(i, j, response.Rows[i].Cells[j].Value);
                }
            }
        }
        var options = {
      areaOpacity: 0.7,
    
      animation:{
        easing: 'inAndOut',
      },
       vAxis: {
        viewWindowMode: 'explicit',
        viewWindow: {
          //max: 180,
          min: 0,
        },
        gridlines: {
          color: '#000000', count: 5,
        }
      },
      hAxis: {gridlines: {color: '#000000', count: 3}},

      tooltipTextStyle: {color: '#444444', fontName: 'Tahoma', fontSize: 12},
      
      series: {
        0:{color: '#207795', lineWidth: 4, pointSize: 10},
        1:{color: '#464A54', lineWidth: 4, pointSize: 10},
      },
      legend: 'none',
    };
        // Create and draw the visualization.
        new google.visualization.LineChart(document.getElementById('chart_div'))
            .draw(data, options);
            new google.visualization.Table(document.getElementById('table_data'))
            .draw(data, options);
    }   

</script>
