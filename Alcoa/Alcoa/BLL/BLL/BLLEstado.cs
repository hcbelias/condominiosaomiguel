//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

using DAL;
using Model;
using BLL.DTOAssembler;
using BLL.DTOQuery;

namespace BLL
{
    public partial class EstadoBLL : BaseBLL
    {
    	DAL.Estado m_Data;
    
    	public EstadoBLL(DAL.Estado p_Data)
    	{
    		this.m_Data = p_Data;
    	}
    
    	public override Model.BaseModel getModel()
    	{
    		if(this.m_Data == null)
    			return null;
    
    		Model.EstadoModel v_Return = new Model.EstadoModel();
    				v_Return.Id = this.m_Data.Id;
    		v_Return.Nome = this.m_Data.Nome;
    		v_Return.Sigla = this.m_Data.Sigla;
    		v_Return.ComboboxText = this.m_Data.ComboboxText;
    		return v_Return;
    	}
    
    	public Model.EstadoModel getModelComplete()
    	{
    		Model.EstadoModel v_Return = (Model.EstadoModel) getModel();
    		if(v_Return == null)
    			return null;
    
    		v_Return.Cidade = getCidade();
    		return v_Return;
    	}
    
    	internal List<CidadeModel> getCidade()
    	{
    		List<CidadeModel> v_Model = new List<CidadeModel>();
    		if (v_Model != null && m_Data != null && m_Data.Cidade!= null)
    		{
    			//v_Model = (CidadeModel)(new BLL.CidadeBLL(m_Data.Cidade).getModel());
    		}
    		return v_Model;
    	}
    	public static EstadoModel GetEstado(int p_Identifier)
    	{
    		Estado v_Data = Estado.GetEstado(p_Identifier);
            return  ( EstadoModel)(new BLL.EstadoBLL(v_Data).getModelComplete());
    	}
    
    	public static EstadoModel GetEstado(int p_Identifier, EstadoDTOQuery p_Query)
    	{
    		Estado v_Data = Estado.GetEstado(p_Identifier);
    		return (new EstadoDTOAssembler()).Create(v_Data, null, p_Query);
    	}
    
    	public static ICollection<EstadoModel> ListEstado()
    	{
    		ICollection<EstadoModel> v_ReturnList = new Collection<EstadoModel>();
    		ICollection<Estado> v_Data = Estado.ListEstado();
    		IEnumerator v_Enumerator = v_Data.GetEnumerator();
    		while (v_Enumerator.MoveNext())
    		{
    			v_ReturnList.Add((new EstadoDTOAssembler()).Create((Estado)v_Enumerator.Current, null, null));
    		}
    		return v_ReturnList;
    	}
    
    	private static EstadoModel CreateModel(Estado v_Data)
        {
            return (EstadoModel) (new BLL.EstadoBLL(v_Data)).getModelComplete();
        }
    
    	public static void DeleteEstado(int p_Identifier)
    	{
    		Estado.DeleteEstado(p_Identifier);
    	}
    
    	public static void CreateEstado(EstadoModel p_Model)
    	{
    		DAL.Estado.Create(p_Model);
    	}
    
    	public static void EditEstado(EstadoModel p_Model)
    	{
    		DAL.Estado.Edit(p_Model);
    	}
    }
}
