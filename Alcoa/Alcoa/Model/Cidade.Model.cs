//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

using System.ComponentModel.DataAnnotations;

namespace Model
{
    public partial class CidadeModel : BaseModel
    {
        #region Primitive Properties
    	
    	public override String ComboboxText { get; set; }
    	
    	[ScaffoldColumn(false)]
    	public override int Id
    	{
    		get;
    		set;
    	}
    
    	[Required(ErrorMessageResourceName = "Required", ErrorMessageResourceType = typeof(Util.Internationalization))]
    
    
    	[Display(Name = "Nome", Prompt = "Nome", ResourceType = typeof(Util.Internationalization))]
    	public virtual string Nome
        {
    		get;
    		set;
    
        }
        #endregion
        #region Navigation Properties
    
        public virtual EstadoModel Estado
        {
            get { return _estado; }
            set
            {
                if (!ReferenceEquals(_estado, value))
                {
                    var previousValue = _estado;
                    _estado = value;
                    FixupEstado(previousValue);
                }
            }
        }
        private EstadoModel _estado;

        #endregion
        #region Association Fixup
    
        private void FixupEstado(EstadoModel previousValue)
        {
            if (previousValue != null && previousValue.Cidade.Contains(this))
            {
                previousValue.Cidade.Remove(this);
            }
    
            if (Estado != null)
            {
                if (!Estado.Cidade.Contains(this))
                {
                    Estado.Cidade.Add(this);
                }
            }
        }

        #endregion
    }
}
